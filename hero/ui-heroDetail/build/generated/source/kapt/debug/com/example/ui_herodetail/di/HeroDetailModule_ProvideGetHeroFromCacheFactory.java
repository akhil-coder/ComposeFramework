// Generated by Dagger (https://dagger.dev).
package com.example.ui_herodetail.di;

import com.example.hero_interactors.GetHeroFromCache;
import com.example.hero_interactors.HeroInteractors;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HeroDetailModule_ProvideGetHeroFromCacheFactory implements Factory<GetHeroFromCache> {
  private final Provider<HeroInteractors> interactorsProvider;

  public HeroDetailModule_ProvideGetHeroFromCacheFactory(
      Provider<HeroInteractors> interactorsProvider) {
    this.interactorsProvider = interactorsProvider;
  }

  @Override
  public GetHeroFromCache get() {
    return provideGetHeroFromCache(interactorsProvider.get());
  }

  public static HeroDetailModule_ProvideGetHeroFromCacheFactory create(
      Provider<HeroInteractors> interactorsProvider) {
    return new HeroDetailModule_ProvideGetHeroFromCacheFactory(interactorsProvider);
  }

  public static GetHeroFromCache provideGetHeroFromCache(HeroInteractors interactors) {
    return Preconditions.checkNotNullFromProvides(HeroDetailModule.INSTANCE.provideGetHeroFromCache(interactors));
  }
}
